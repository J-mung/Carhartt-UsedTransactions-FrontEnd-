@use './border' as border;
@use './colors' as *;
@use './map' as *;
@use 'sass:map';
@use './theme' as theme;

// InputBox 전용 테마 맵 (light / dark)
$input-themes: (
  light: (
    selector: theme.$theme-light-selector,
    base: (
      background: map.get($theme-gray, 'light', 'gray-1'),
      border: map.get($theme-gray, 'light', 'gray-5'),
      font: map.get($theme-gray, 'light', 'gray-13'),
      placeholder: map.get($theme-gray, 'light', 'gray-8'),
      label: map.get($theme-gray, 'light', 'gray-13'),
      icon: map.get($theme-gray, 'light', 'gray-11'),
      asterisk: map.get($theme-red, 'light', 'red-6'),
    ),
    focused: (
      background: map.get($theme-gray, 'light', 'gray-1'),
      border: map.get($theme-blue, 'light', 'blue-6'),
    ),
    disabled: (
      background: map.get($theme-gray, 'light', 'gray-3'),
      border: map.get($theme-gray, 'light', 'gray-7'),
      font: map.get($theme-gray, 'light', 'gray-7'),
      placeholder: map.get($theme-gray, 'light', 'gray-6'),
      label: map.get($theme-gray, 'light', 'gray-7'),
      icon: map.get($theme-gray, 'light', 'gray-7'),
    ),
    error: (
      background: map.get($theme-red, 'light', 'red-1'),
      border: map.get($theme-red, 'light', 'red-6'),
      font: map.get($theme-gray, 'light', 'gray-13'),
      placeholder: map.get($theme-gray, 'light', 'gray-8'),
      label: map.get($theme-red, 'light', 'red-6'),
      icon: map.get($theme-red, 'light', 'red-6'),
    ),
  ),
  dark: (
    selector: theme.$theme-dark-selector,
    base: (
      background: map.get($theme-gray, 'dark', 'gray-2'),
      border: map.get($theme-gray, 'dark', 'gray-6'),
      font: map.get($theme-gray, 'dark', 'gray-13'),
      placeholder: map.get($theme-gray, 'dark', 'gray-8'),
      label: map.get($theme-gray, 'dark', 'gray-13'),
      icon: map.get($theme-gray, 'dark', 'gray-10'),
      asterisk: map.get($theme-red, 'dark', 'red-6'),
    ),
    focused: (
      background: map.get($theme-gray, 'dark', 'gray-2'),
      border: map.get($theme-blue, 'dark', 'blue-6'),
    ),
    disabled: (
      background: map.get($theme-gray, 'dark', 'gray-6'),
      border: map.get($theme-gray, 'dark', 'gray-8'),
      font: map.get($theme-gray, 'dark', 'gray-7'),
      placeholder: map.get($theme-gray, 'dark', 'gray-7'),
      label: map.get($theme-gray, 'dark', 'gray-7'),
      icon: map.get($theme-gray, 'dark', 'gray-7'),
    ),
    error: (
      background: map.get($theme-red, 'dark', 'red-1'),
      border: map.get($theme-red, 'dark', 'red-6'),
      font: map.get($theme-gray, 'dark', 'gray-13'),
      placeholder: map.get($theme-gray, 'dark', 'gray-8'),
      label: map.get($theme-red, 'dark', 'red-6'),
      icon: map.get($theme-red, 'dark', 'red-6'),
    ),
  ),
);

$input-size-group: '--l', '', '--s';

// 기본 스타일
.input-box {
  display: flex;
  width: 100%;
  flex-direction: column;
  margin-bottom: 1rem; // 16px

  // Input container
  &__container {
    position: relative;
    display: flex;
    align-items: center;

    // Size variants
    @each $size in $input-size-group {
      &#{$size} {
        .input-box__input {
          @if $size == '--s' {
            font-size: 0.75rem; // 12px
            padding: 0.5rem 0.625rem; // 4px 10px
          } @else if $size == '' {
            font-size: 0.875rem; // 14px
            padding: 0.5rem 0.75rem; // 4px 12px
          } @else if $size == '--l' {
            font-size: 1rem; // 16px
            padding: 0.5rem 0.875rem; // 4px 14px
          }
        }

        // 아이콘 사이즈
        [class*='ic-'] {
          @if $size == '--s' {
            width: 1.25rem;
            height: 1.25rem;
          } @else if $size == '' {
            width: 1.375rem;
            height: 1.375rem;
          } @else if $size == '--l' {
            width: 1.5rem;
            height: 1.5rem;
          }
        }
      }
    }
  }

  // Label
  &__label {
    display: block;
    font-weight: 500;
    margin-bottom: 0.3125rem; // 5px
    line-height: 1.4;
  }

  // Required asterisk
  &__required {
    margin-left: 0.125rem; // 2px
  }

  // Base input styling
  &__input {
    width: 100%;
    @include border.borderRadius(border.$component-border-radius);

    // Number input 화살표 제거
    &[type='number'] {
      // Firefox
      -moz-appearance: textfield;

      // Chrome, Safari, Edge, and Opera
      &::-webkit-outer-spin-button,
      &::-webkit-inner-spin-button {
        -webkit-appearance: none;
        margin: 0;
      }
    }
  }

  // Clear button
  &__clear-btn {
    position: absolute;
    right: 3rem; // 48px
    height: 1rem; // 16px
    width: 1rem; // 16px
    display: flex;
    align-items: center;
    justify-content: center;
    cursor: pointer;
    z-index: 5;
    border: none;
    border-radius: 50%;
    transition: opacity 0.2s ease;

    &:hover {
      opacity: 0.75;
    }

    .ic-close {
      width: 0.5rem;
      height: 0.5rem;
    }
  }

  // Prefix & Suffix and Icon
  &__prefix,
  &__suffix {
    position: absolute;
    padding: 0 0.75rem; // 0 12px
  }

  &__prefix {
    top: 0;
    bottom: 0;
    display: flex;
    align-items: center;
    @include border.borderRadius(
      border.$component-border-radius 0 0 border.$component-border-radius
    );
  }

  &__suffix {
    right: 0;
  }

  [class*='ic-'] {
    position: absolute;

    &.left {
      left: 0.75rem; // 12px
    }

    &.right {
      right: 0.75rem; // 12px
    }
  }

  // Input padding adjustments for icons and affixes
  &--has-prefix,
  &--has-icon-left {
    .input-box__input {
      padding-left: 4rem; // 64px
    }
  }

  &--has-suffix,
  &--has-icon-right,
  &--has-clear {
    .input-box__input {
      padding-right: 6rem; // 96px
    }

    .input-box__clear-btn {
      right: 4rem; // 64px
    }
  }

  // 테마 반복문
  @each $mode, $config in $input-themes {
    #{map.get($config, selector)} & {
      // Base styles
      .input-box__label {
        color: deep-get($config, 'base', 'label');
      }

      // Required asterisk
      .input-box__required {
        color: deep-get($config, 'base', 'asterisk');
      }

      .input-box__input {
        background: deep-get($config, 'base', 'background');
        color: deep-get($config, 'base', 'font');
        @include border.border(
          0.0625rem,
          deep-get($config, 'base', 'border'),
          solid,
          all
        );

        &::placeholder {
          color: deep-get($config, 'base', 'placeholder');
        }

        // Focus state
        &:focus {
          background: deep-get($config, 'focused', 'background');
          @include border.border(
            0.0625rem,
            deep-get($config, 'focused', 'border'),
            solid,
            all
          );
          box-shadow: 0
            0
            0
            0.125rem
            rgba(deep-get($config, 'focused', 'border'), 0.2);
          outline: none;
        }

        // Disabled state
        &:disabled {
          cursor: not-allowed;
          background: deep-get($config, 'disabled', 'background');
          color: deep-get($config, 'disabled', 'font');
          @include border.border(
            0.0625rem,
            deep-get($config, 'disabled', 'border'),
            solid,
            all
          );

          &::placeholder {
            color: deep-get($config, 'disabled', 'placeholder');
          }
        }
      }

      // Prefix & Suffix
      &__prefix {
        background: deep-get($config, 'base', 'border');
        color: deep-get($config, 'base', 'font');
        @include border.border(
          0.0625rem,
          deep-get($config, 'base', 'border'),
          solid,
          all
        );
      }

      &:focus-within .input-box__prefix {
        @include border.border(
          0.0625rem,
          deep-get($config, 'focused', 'border'),
          solid,
          all
        );
        border-right: none;
      }

      &:has(.input-box__input:disabled) .input-box__prefix {
        @include border.border(
          0.0625rem,
          deep-get($config, 'disabled', 'border'),
          solid,
          all
        );
      }

      &__suffix {
        color: deep-get($config, 'base', 'icon');
      }

      // Icons
      [class*='ic-'] {
        background: deep-get($config, 'base', 'icon');
      }

      // Clear button
      &__clear-btn {
        background: deep-get($config, 'base', 'font');

        .ic-close {
          background: deep-get($config, 'base', 'background');
        }
      }

      // Error state
      &.input-box--error {
        .input-box__label {
          color: deep-get($config, 'error', 'label');
        }

        .input-box__input {
          background: deep-get($config, 'error', 'background');
          @include border.border(
            0.0625rem,
            deep-get($config, 'error', 'border'),
            solid,
            all
          );
          color: deep-get($config, 'error', 'font');
        }

        .input-box__prefix {
          @include border.border(
            0.0625rem,
            deep-get($config, 'error', 'border'),
            solid,
            all
          );
        }

        [class*='ic-'] {
          background: deep-get($config, 'error', 'icon');
        }
      }
    }
  }
}
