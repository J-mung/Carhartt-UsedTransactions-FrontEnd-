@use './border' as border;
@use './colors' as *;
@use './map' as *;
@use 'sass:map';
@use './theme' as theme;

// 버튼 전용 테마 맵 (light / dark)
$button-themes: (
  light: (
    selector: theme.$theme-light-selector,
    fill: (
      primary: (
        default: (
          background: map.get($theme-blue, 'light', 'blue-6'),
          border: map.get($theme-blue, 'light', 'blue-6'),
          font: map.get($theme-gray, 'light', 'gray-1'),
          icon: map.get($theme-gray, 'light', 'gray-1'),
        ),
        hover: (
          background: map.get($theme-blue, 'light', 'blue-5'),
          border: map.get($theme-blue, 'light', 'blue-5'),
          font: map.get($theme-gray, 'light', 'gray-1'),
          icon: map.get($theme-gray, 'light', 'gray-1'),
        ),
        active: (
          background: map.get($theme-blue, 'light', 'blue-7'),
          border: map.get($theme-blue, 'light', 'blue-7'),
          font: map.get($theme-gray, 'light', 'gray-1'),
          icon: map.get($theme-gray, 'light', 'gray-1'),
        ),
        disabled: (
          background: map.get($theme-gray, 'light', 'gray-3'),
          border: map.get($theme-gray, 'light', 'gray-7'),
          font: map.get($theme-gray, 'light', 'gray-7'),
          icon: map.get($theme-gray, 'light', 'gray7'),
        ),
      ),
      secondary: (
        default: (
          background: map.get($theme-gray, 'light', 'gray-1'),
          border: map.get($theme-gray, 'light', 'gray-5'),
          font: map.get($theme-gray, 'light', 'gray-13'),
          icon: map.get($theme-gray, 'light', 'gray-13'),
        ),
        hover: (
          background: map.get($theme-gray, 'light', 'gray-1'),
          border: map.get($theme-blue, 'light', 'blue-5'),
          font: map.get($theme-blue, 'light', 'blue-5'),
          icon: map.get($theme-blue, 'light', 'blue-5'),
        ),
        active: (
          background: map.get($theme-gray, 'light', 'gray-1'),
          border: map.get($theme-blue, 'light', 'blue-7'),
          font: map.get($theme-blue, 'light', 'blue-7'),
          icon: map.get($theme-blue, 'light', 'blue-7'),
        ),
        disabled: (
          background: map.get($theme-gray, 'light', 'gray-3'),
          border: map.get($theme-gray, 'light', 'gray-7'),
          font: map.get($theme-gray, 'light', 'gray-7'),
          icon: map.get($theme-gray, 'light', 'gray7'),
        ),
      ),
    ),
  ),
  dark: (
    selector: theme.$theme-dark-selector,
    fill: (
      primary: (
        default: (
          background: map.get($theme-blue, 'dark', 'blue-6'),
          border: map.get($theme-blue, 'dark', 'blue-6'),
          font: map.get($theme-gray, 'dark', 'gray-13'),
          icon: map.get($theme-gray, 'dark', 'gray-13'),
        ),
        hover: (
          background: map.get($theme-blue, 'dark', 'blue-7'),
          border: map.get($theme-blue, 'dark', 'blue-7'),
          font: map.get($theme-gray, 'dark', 'gray-13'),
          icon: map.get($theme-gray, 'dark', 'gray-13'),
        ),
        active: (
          background: map.get($theme-blue, 'dark', 'blue-5'),
          border: map.get($theme-blue, 'dark', 'blue-5'),
          font: map.get($theme-gray, 'dark', 'gray-13'),
          icon: map.get($theme-gray, 'dark', 'gray-13'),
        ),
        disabled: (
          background: map.get($theme-gray, 'dark', 'gray-6'),
          border: map.get($theme-gray, 'light', 'gray-8'),
          font: map.get($theme-gray, 'light', 'gray-8'),
          icon: map.get($theme-gray, 'light', 'gray-8'),
        ),
      ),
      secondary: (
        default: (
          background: map.get($theme-gray, 'dark', 'gray-1'),
          border: map.get($theme-gray, 'dark', 'gray-5'),
          font: map.get($theme-gray, 'dark', 'gray-13'),
          icon: map.get($theme-gray, 'dark', 'gray-13'),
        ),
        hover: (
          background: map.get($theme-gray, 'dark', 'gray-1'),
          border: map.get($theme-blue, 'dark', 'blue-7'),
          font: map.get($theme-blue, 'dark', 'blue-7'),
          icon: map.get($theme-blue, 'dark', 'blue-7'),
        ),
        active: (
          background: map.get($theme-gray, 'dark', 'gray-1'),
          border: map.get($theme-blue, 'dark', 'blue-5'),
          font: map.get($theme-blue, 'dark', 'blue-5'),
          icon: map.get($theme-blue, 'dark', 'blue-5'),
        ),
        disabled: (
          background: map.get($theme-gray, 'dark', 'gray-6'),
          border: map.get($theme-gray, 'light', 'gray-8'),
          font: map.get($theme-gray, 'light', 'gray-8'),
          icon: map.get($theme-gray, 'light', 'gray-8'),
        ),
      ),
    ),
  ),
);

$button-size-group: '--l', '--m', '', '--s', '--xs';

.btn {
  display: inline-block;
  overflow: visible;
  @include border.borderRadius(border.$component-border-radius); // 3px
  font-weight: 400;
  line-height: 1.3;
  vertical-align: middle;
  opacity: 1;
  user-select: none;
  white-space: none;
  text-decoration: none;
  cursor: pointer;

  // 텍스트 버튼
  @each $size in $button-size-group {
    &#{$size} {
      display: inline-block;
      line-height: 1.3;
      @if $size == '--xs' {
        padding: 0.0625rem; // 1px
      } @else if $size == '--s' {
        padding: 0.125rem; // 2px
      } @else if $size == '' {
        padding: 0.313rem; // 5px
      } @else if $size == '--m' {
        padding: 0.313rem; // 5px
      } @else if $size == '--l' {
        padding: 0.313rem; // 5px
      }
    }
  }

  // 테마 반복문
  @each $mode, $config in $button-themes {
    #{map.get($config, selector)} & {
      @each $variant, $states in map.get($config, fill) {
        &:not(.disabled) {
          &.#{$variant} {
            background: deep-get($states, 'default', 'background');
            @include border.border(
              0.0625rem,
              deep-get($states, 'default', 'border'),
              solid,
              all
            );

            // 폰트
            > .btn__label {
              color: deep-get($states, 'default', 'font');
            }

            &:hover {
              background: deep-get($states, 'hover', 'background');
              @include border.border(
                0.0625rem,
                deep-get($states, 'hover', 'border'),
                solid,
                all
              );

              // 폰트
              > .btn__label {
                color: deep-get($states, 'hover', 'font');
              }
            }
            &:active {
              background: deep-get($states, 'active', 'background');
              @include border.border(
                0.0625rem,
                deep-get($states, 'active', 'border'),
                solid,
                all
              );

              // 폰트
              > .btn__label {
                color: deep-get($states, 'active', 'font');
              }
            }
            &:disabled {
              cursor: not-allowed;

              background: deep-get($states, 'disabled', 'background');
              @include border.border(
                0.0625rem,
                deep-get($states, 'disabled', 'border'),
                solid,
                all
              );

              // 폰트
              > .btn__label {
                color: deep-get($states, 'disabled', 'font');
              }
            }
          }
        }
      }
    }
  }
}
